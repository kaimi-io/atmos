/** \file Calculates timer configuration for required input parameters.
 *  Can be included many times.
 *  Requires ATMOS_TIMER_PRESCALER_VALUE and ATMOS_MAX_TIMER_VALUE macros be defined before inclusion.
 *  If timer can be used to provide required params, then ATMOS_TIMER_PRESCALER_CONTROL_VALUE and ATMOS_TIMER_TOP_VALUE
 *  macros will be left defined after inclusion of this file. See timer_params.h for more details. */

//If required timer tick duration can be provided by timer with specified prescaler value...
#if ATMOS_TICK_PERIOD_US >= (ATMOS_TIMER_PRESCALER_VALUE * 1000000 / F_CPU) \
	&& ATMOS_TICK_PERIOD_US <= (ATMOS_TIMER_PRESCALER_VALUE * 1000000 * ATMOS_MAX_TIMER_VALUE / F_CPU)
	//Calculate limiting timer value, which will be written into CTC register.
#	define ATMOS_TIMER_TOP_VALUE (1ull * ATMOS_TICK_PERIOD_US * F_CPU) / (1ull * ATMOS_TIMER_PRESCALER_VALUE * 1000000)
	//Then calculate combination of prescaler control bits to enable required prescaler.
#	if ATMOS_TIMER_TOP_VALUE > 0 && ATMOS_TIMER_TOP_VALUE <= ATMOS_MAX_TIMER_VALUE
#		ifdef ATMOS_TIMER_PRESCALER_HAS_16384
#			if ATMOS_TIMER_PRESCALER_VALUE == 1
#				define ATMOS_TIMER_PRESCALER_CONTROL_VALUE _BV(ATMOS_TIMER_PRESCALER_CS0)
#			elif ATMOS_TIMER_PRESCALER_VALUE == 2
#				define ATMOS_TIMER_PRESCALER_CONTROL_VALUE _BV(ATMOS_TIMER_PRESCALER_CS1)
#			elif ATMOS_TIMER_PRESCALER_VALUE == 4
#				define ATMOS_TIMER_PRESCALER_CONTROL_VALUE _BV(ATMOS_TIMER_PRESCALER_CS0) | _BV(ATMOS_TIMER_PRESCALER_CS1)
#			elif ATMOS_TIMER_PRESCALER_VALUE == 8
#				define ATMOS_TIMER_PRESCALER_CONTROL_VALUE _BV(ATMOS_TIMER_PRESCALER_CS2)
#			elif ATMOS_TIMER_PRESCALER_VALUE == 16
#				define ATMOS_TIMER_PRESCALER_CONTROL_VALUE _BV(ATMOS_TIMER_PRESCALER_CS2) | _BV(ATMOS_TIMER_PRESCALER_CS0)
#			elif ATMOS_TIMER_PRESCALER_VALUE == 32
#				define ATMOS_TIMER_PRESCALER_CONTROL_VALUE _BV(ATMOS_TIMER_PRESCALER_CS2) | _BV(ATMOS_TIMER_PRESCALER_CS1)
#			elif ATMOS_TIMER_PRESCALER_VALUE == 64
#				define ATMOS_TIMER_PRESCALER_CONTROL_VALUE _BV(ATMOS_TIMER_PRESCALER_CS2) | _BV(ATMOS_TIMER_PRESCALER_CS1) | _BV(ATMOS_TIMER_PRESCALER_CS0)
#			elif ATMOS_TIMER_PRESCALER_VALUE == 128
#				define ATMOS_TIMER_PRESCALER_CONTROL_VALUE _BV(ATMOS_TIMER_PRESCALER_CS3)
#			elif ATMOS_TIMER_PRESCALER_VALUE == 256
#				define ATMOS_TIMER_PRESCALER_CONTROL_VALUE _BV(ATMOS_TIMER_PRESCALER_CS3) | _BV(ATMOS_TIMER_PRESCALER_CS0)
#			elif ATMOS_TIMER_PRESCALER_VALUE == 512
#				define ATMOS_TIMER_PRESCALER_CONTROL_VALUE _BV(ATMOS_TIMER_PRESCALER_CS3) | _BV(ATMOS_TIMER_PRESCALER_CS1)
#			elif ATMOS_TIMER_PRESCALER_VALUE == 1024
#				define ATMOS_TIMER_PRESCALER_CONTROL_VALUE _BV(ATMOS_TIMER_PRESCALER_CS3) | _BV(ATMOS_TIMER_PRESCALER_CS0) | _BV(ATMOS_TIMER_PRESCALER_CS1)
#			elif ATMOS_TIMER_PRESCALER_VALUE == 2048
#				define ATMOS_TIMER_PRESCALER_CONTROL_VALUE _BV(ATMOS_TIMER_PRESCALER_CS3) | _BV(ATMOS_TIMER_PRESCALER_CS2)
#			elif ATMOS_TIMER_PRESCALER_VALUE == 4096
#				define ATMOS_TIMER_PRESCALER_CONTROL_VALUE _BV(ATMOS_TIMER_PRESCALER_CS3) | _BV(ATMOS_TIMER_PRESCALER_CS2) | _BV(ATMOS_TIMER_PRESCALER_CS0)
#			elif ATMOS_TIMER_PRESCALER_VALUE == 8192
#				define ATMOS_TIMER_PRESCALER_CONTROL_VALUE _BV(ATMOS_TIMER_PRESCALER_CS3) | _BV(ATMOS_TIMER_PRESCALER_CS2) | _BV(ATMOS_TIMER_PRESCALER_CS1)
#			elif ATMOS_TIMER_PRESCALER_VALUE == 16384
#				define ATMOS_TIMER_PRESCALER_CONTROL_VALUE _BV(ATMOS_TIMER_PRESCALER_CS3) | _BV(ATMOS_TIMER_PRESCALER_CS2) | _BV(ATMOS_TIMER_PRESCALER_CS1) | _BV(ATMOS_TIMER_PRESCALER_CS0)
#			endif //ATMOS_TIMER_PRESCALER_VALUE
#		elif defined(ATMOS_TIMER_PRESCALER_HAS_32_128)
#			if ATMOS_TIMER_PRESCALER_VALUE == 1
#				define ATMOS_TIMER_PRESCALER_CONTROL_VALUE _BV(ATMOS_TIMER_PRESCALER_CS0)
#			elif ATMOS_TIMER_PRESCALER_VALUE == 8
#				define ATMOS_TIMER_PRESCALER_CONTROL_VALUE _BV(ATMOS_TIMER_PRESCALER_CS1)
#			elif ATMOS_TIMER_PRESCALER_VALUE == 32
#				define ATMOS_TIMER_PRESCALER_CONTROL_VALUE _BV(ATMOS_TIMER_PRESCALER_CS0) | _BV(ATMOS_TIMER_PRESCALER_CS1)
#			elif ATMOS_TIMER_PRESCALER_VALUE == 64
#				define ATMOS_TIMER_PRESCALER_CONTROL_VALUE _BV(ATMOS_TIMER_PRESCALER_CS2)
#			elif ATMOS_TIMER_PRESCALER_VALUE == 128
#				define ATMOS_TIMER_PRESCALER_CONTROL_VALUE _BV(ATMOS_TIMER_PRESCALER_CS2) | _BV(ATMOS_TIMER_PRESCALER_CS0)
#			elif ATMOS_TIMER_PRESCALER_VALUE == 256
#				define ATMOS_TIMER_PRESCALER_CONTROL_VALUE _BV(ATMOS_TIMER_PRESCALER_CS2) | _BV(ATMOS_TIMER_PRESCALER_CS1)
#			elif ATMOS_TIMER_PRESCALER_VALUE == 1024
#				define ATMOS_TIMER_PRESCALER_CONTROL_VALUE _BV(ATMOS_TIMER_PRESCALER_CS2) | _BV(ATMOS_TIMER_PRESCALER_CS1) | _BV(ATMOS_TIMER_PRESCALER_CS0)
#			endif //ATMOS_TIMER_PRESCALER_VALUE
#		else //ATMOS_TIMER_PRESCALER_HAS_32_128
#			if ATMOS_TIMER_PRESCALER_VALUE == 1
#				define ATMOS_TIMER_PRESCALER_CONTROL_VALUE _BV(ATMOS_TIMER_PRESCALER_CS0)
#			elif ATMOS_TIMER_PRESCALER_VALUE == 8
#				define ATMOS_TIMER_PRESCALER_CONTROL_VALUE _BV(ATMOS_TIMER_PRESCALER_CS1)
#			elif ATMOS_TIMER_PRESCALER_VALUE == 64
#				define ATMOS_TIMER_PRESCALER_CONTROL_VALUE _BV(ATMOS_TIMER_PRESCALER_CS0) | _BV(ATMOS_TIMER_PRESCALER_CS1)
#			elif ATMOS_TIMER_PRESCALER_VALUE == 256
#				define ATMOS_TIMER_PRESCALER_CONTROL_VALUE _BV(ATMOS_TIMER_PRESCALER_CS2)
#			elif ATMOS_TIMER_PRESCALER_VALUE == 1024
#				define ATMOS_TIMER_PRESCALER_CONTROL_VALUE _BV(ATMOS_TIMER_PRESCALER_CS2) | _BV(ATMOS_TIMER_PRESCALER_CS0)
#			endif //ATMOS_TIMER_PRESCALER_VALUE
#		endif //ATMOS_TIMER_PRESCALER_HAS_32_128
#	else //ATMOS_TIMER_TOP_VALUE
#		undef ATMOS_TIMER_TOP_VALUE
#	endif //ATMOS_TIMER_TOP_VALUE
#endif

#ifndef ATMOS_TIMER_PRESCALER_CONTROL_VALUE
#	undef ATMOS_TIMER_TOP_VALUE
#	undef ATMOS_TIMER_PRESCALER_VALUE
#endif //ATMOS_TIMER_PRESCALER_CONTROL_VALUE
